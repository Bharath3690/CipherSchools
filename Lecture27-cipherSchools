import { createContext,useState } from "react";
import {v4 as randomUUID} from "uuid";
// import { useState } from "react";
const TaskContext = createContext();
const TASK_EDITABLE_FIELD_LIST = ["title","description"];
// info aware of multiple components
const TaskProvider = ({children})=>{
    const [taskList, setTaskList] = useState([]);

const addNewTask = (task) => {
   setTaskList([...taskList,
     {...task, createdDate: new Date(), taskId: randomUUID()},]);
};
const deleteTask = (taskId) => {
  setTaskList(taskList.filter((task) =>task.taskId !== taskId));
};
const editTask = (task) => {
  let tempTaskList = [...taskList];
  for (let t of tempTaskList){
    if(t.taskId === task.taskId){
       TASK_EDITABLE_FIELD_LIST.forEach((field)=>t[field] = task[field]);
    }
  }
  setTaskList(taskList);
}
return (
  <TaskContext.Provider value={{taskList,addNewTask, deleteTask,editTask}}>
    {children}
  </TaskContext.Provider>
);

import AddTask from "./components/Addtask";
//import TaskContext from "./components/context/TaskContext";
import ToDoScreens from "./screens/ToDoScreens";
//import { useContext, useState } from "react";
import {createBrowserRouter, RouterProvider} from "react-router-dom";
import { TaskProvider } from "./context/TaskContext";

const router = createBrowserRouter([
    {
        path: "/",
        element:<ToDoScreens />,
    },
    {
        path: "/add-task",
        element:<AddTask />,
    },

]);
const App = ()=>{
    // const { taskList, addNewTask } = useContext(TaskContext);
    return ( 
        <TaskProvider>
    <RouterProvider router={router}/>
    </TaskProvider>);
};
export default App;
};

export {TaskProvider};
export default TaskContext;

